rove v0.1a:
  
	what is it?
		rove is a sample-cutter in the spirit of (and blatantly imitating) mlr.
		it is written in C and designed primarily to run on the linux platform,
		though, due to similarities between the platforms, it has been compiled
		and run successfully on mac os X.
		
		please keep in mind that rove is alpha-quality software at best!
		there's still much to be done to make it useful even in a basic setting,
		and it's a far cry from being production-worthy.  i can't guarantee that
		it will work for you, though i've yet to have a problem.
		
		rove has, thus far, been tested on a 32-bit linux system, a 64-bit linux
		system, and a mac os x system.	after installing the dependencies,
		it required no modification to function correctly.
		
		so, basically, i can't guarantee it'll work for you.  but it probably will.
		if it doesn't, holler at me.
		
	how do i install it?
		the dependency list is short, but, depending on your architecture,
		installation may prove to be a bit different than what you're used to.
		
		regardless of the platform, you'll need:
			- libmonome
			- JACK (http://www.jackaudio.org/)
			- libsndfile
			- libsamplerate
		
		if you're on linux, you might already have the latter 3 installed. if not,
		use your system's package manager to install both the main packages and the
		"-dev" packages for them.
		
		if you're a mac user, this may be a bit trickier.  you can grab JACK from
		http://jackosx.com/, and libsndfile and libsamplerate from
		http://mega-nerd.com/libsndfile/ and http://mega-nerd.com/SRC/
		respectively.  read the README and INSTALL files that come along
		with those projects.
		
		if you're familiar with maintaining software on os X, please get in contact
		with me!  i'd love to be able to distribute a proper package of rove,
		but i haven't the faintest idea where to start.
		additionally, i don't have any mac computers on which i can test.
		
	okay, i've got that stuff installed, now what?
		just run "make" from the top-level rove directory.	rove should	build quickly
		and uneventfully.  after that, just do a "sudo make install" to install the
		rove executable system-wide.
		
		if there are any errors in the build process, let me know either via email
		or on the monome forums.  i'll see what i can do.
		  
	how do i use it?
		currently, rove has no GUI of any sort.	 all of the configuration is done
		through text files in an arcane file format i've designed out of laziness.
		loosely, these can be thought of as session files.	here's an example:
		
			:87.68:2:.25
			1:1:drums.wav
			2:1:piano.wav
			2:r1:piano.wav
			
		what?
		okay, this might make more sense:
		
			: BPM : number of groups : fraction of 1 beat (quarter note) to quantize to
			group number : (reverse?) number of rows to span : filename relative to session file
			group number : (reverse?) number of rows to span : filename relative to session file
			...
			
		the row spanning lets you spread a loop out across several rows for added precision.
		adding an "r" before the "number of rows to span" indicates that the loop should be
		played in reverse.

		so the above file has a BPM of 87.68, has 2 groups, and quantizes to 16th notes.
		there are three files loaded, drums.wav on group 1 spanning 1 row, and then piano.wav
		loaded in twice, both on group two and both spanning one row, but the lower one is
		playing backwards.
	
	what do i press?
		 +-----------+ - - - - - +-----------+-----------+-----------+-----------+
		 |   group   |  many of  | pattern 1 | pattern 2 |   shift   |    meta   |
		 |    mute   |   those   | rec / tog | rec / tog |           |           |
		 +-----------+ - - - - - +-----------+-----------+-----------+-----------+

		at the moment, it's designed to mimic mlr.	the top row is the control row, with the
		first [number of groups in session] buttons turning off their respective group.
		activate a group by pressing a button associated with one of the loops, which means
		anything below the first row starting with the second.
		
		the two buttons after the group controls are pattern recorders, and these act a bit
		differently.  pressing the button without anything recorded waits until you cut
		somewhere in a loop to start recording, then will record a pattern as long as you've
		specified, or, if the pattern length is 0, it will record until you press the record
		button again.
		
		pressing that button again toggles the pattern on and off, keeping what you've recorded.
		if you hold shift (the button to the right of pattern 2) and press the pattern button,
		it erases what is recorded, and you can record again by pressing said pattern button
		and playing another sequence.
		
		at the moment, this is pretty much the extent of rove's functionality.
		don't worry, more is coming soon!
	
	how do i get in contact with you?
		my email address is visinin@gmail.com, and i'd love to hear from you.  questions,
		comments, encouragement, anything.	it's a great feeling hearing from people.
		
		please don't mind the messiness of the code or the general lack of polish presently.
		i figure that getting software into peoples' hands is the best way to find rough edges
		that i would otherwise miss, and it's the best way to get alternate perspectives
		on how an interface feels.
		
		thanks so much.
		-will