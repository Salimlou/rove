#!/bin/sh

#
# configure script for rove!
#

ROVE_VERSION="0.2";
CFLAGS="";
LDFLAGS="";

CC="gcc";
CC_VERSION=;
PKGCONFIG_VERSION=;

HAVE_LO=;
LO_VERSION=;
LO_CFLAGS="";
LO_LIBS="-llo -lpthread";

HAVE_JACK=;
JACK_VERSION=;
JACK_CFLAGS="";
JACK_LIBS="-ljack -lpthread -lrt";

HAVE_SNDFILE=;
SNDFILE_VERSION=;
SNDFILE_CFLAGS="";
SNDFILE_LIBS="-lsndfile";

#
# functions
#

_echo () {
	# portable (sysv/bsd) echo -n
	if [ $1 = "-n" ]; then
		shift;
		echo $n "$*" $c;
	else
		echo "$*";
	fi
}

echo_n () {
	_echo -n "$*";
}

# color and text styles

att() {
	if [ $# -eq 0 ]; then
		echo -ne "\033[0m";
		return 0;
	fi

	echo -ne "\033["
	while [ $# -ge 1 ]; do
		case $1 in
			bold)      C=1;;
			underline) C=4;;
			hidden)    C=8;;
			
			black)     C=30;;
			red)       C=31;;
			green)     C=32;;
			yellow)    C=33;;
			blue)      C=34;;
			magenta)   C=35;;
			cyan)      C=36;;
			white)     C=37;;
			
			reset)
				echo -ne "0m";
				return 0;
		esac
		
		echo -ne "$C"
		
		if [ $# -ge 2 ]; then
			echo -ne ";";
		fi
		
		shift;
	done;
	echo -ne "m";
}

style_package () { att blue bold; _echo $*; att; }
style_success () { att green; _echo $*; att; }
style_distro  () { att cyan; _echo $*; att; }
style_error   () { att red bold; _echo $*; att; }
style_link    () { att blue bold underline; _echo $*; att; }

cleanup () {
	rmdir .conftests
}

# feature test commands

try_command () {
	if $* > /dev/null 2> /dev/null; then
		return 0;
	else
		return -1;
	fi
}

check_pkgconfig () {
	CMD="pkg-config --version";
	
	if try_command $CMD; then
		PKGCONFIG_VERSION=`$CMD`;
	fi
}

check_gcc () {
	CMD="$CC -dumpversion";
	try_command $CMD;
	
	if [ $? -eq 0 ]; then
		CC_VERSION=`$CMD`;
		return 0;
	fi

	CC_VERSION=;
	return -1;
}

check_jack () {
	cat <<EOF > .conftests/jack.c
#include <jack/jack.h>

int main(int argc, char **argv) {
	if( jack_client_name_size() )
		return 0;
	else
		return -1;
}
EOF
	
	CMD="$CC $JACK_CFLAGS $JACK_LIBS .conftests/jack.c -o .conftests/jack"
	try_command $CMD;

	if [ $? -ne 0 ]; then
		rm -f .conftests/jack.c;
		rm -f .conftests/jack;
	
		return -1;
	fi
	
	CMD="./.conftests/jack";
	try_command $CMD;

	rm -f .conftests/jack.c;
	rm -f .conftests/jack;
	
	if [ $? -ne 0 ]; then
		return -2;
	fi

	HAVE_JACK=1;
	JACK_VERSION="`jackd -V | awk '{print $3}' 2> /dev/null`";
	
	if [ $? -ne 0 ]; then
		JACK_VERSION=;
	fi
	
	return 0;
}

check_lo () {
	cat <<EOF > .conftests/lo.c
#include <lo/lo.h>

int main(int argc, char **argv) {
	lo_address a = lo_address_new(NULL, NULL);
	
	if( !a )
		return -1;
	
	lo_address_free(a);
	return 0;
}
EOF

	CMD="$CC $LO_CFLAGS $LO_LIBS .conftests/lo.c -o .conftests/lo"
	$CMD;
	try_command $CMD;

	if [ $? -ne 0 ]; then
		rm -f .conftests/lo.c;
		rm -f .conftests/lo;
	
		return -1;
	fi
	
	CMD="./.conftests/lo";
	try_command $CMD;
	
	rm -f .conftests/lo.c;
	rm -f .conftests/lo;
	
	if [ $? -ne 0 ]; then
		return -2;
	fi
	
	HAVE_LO=1;
	
	if [ $PKGCONFIG_VERSION ]; then
		CMD="pkg-config --modversion liblo"
		try_command $CMD;
		
		if [ $? -ne 0 ]; then
			return 0;
		fi
		
		LO_VERSION=`$CMD`;
	fi

	return 0;
}

check_sndfile () {
	cat <<EOF > .conftests/sndfile.c
#include <sndfile.h>

int main(int argc, char **argv) {
	SF_INFO info;
	
	info.samplerate = 44100;
	info.format     = SF_FORMAT_WAV | SF_FORMAT_PCM_16;
	info.channels   = 1;
	info.frames     = 0;
	
	if( sf_format_check(&info) )
		return 0;
	else
		return -1;
}
EOF

	CMD="$CC $SNDFILE_CFLAGS $SNDFILE_LIBS .conftests/sndfile.c -o .conftests/sndfile"
	try_command $CMD;

	if [ $? -ne 0 ]; then
		rm -f .conftests/sndfile.c;
		rm -f .conftests/sndfile;
	
		return -1;
	fi
	
	CMD="./.conftests/sndfile";
	try_command $CMD;
	
	rm -f .conftests/sndfile.c;
	rm -f .conftests/sndfile;
	
	if [ $? -ne 0 ]; then
		return -2;
	fi
	
	HAVE_SNDFILE=1;
	
	if [ $PKGCONFIG_VERSION ]; then
		CMD="pkg-config --modversion sndfile"
		try_command $CMD;
		
		if [ $? -ne 0 ]; then
			return 0;
		fi
		
		SNDFILE_VERSION=`$CMD`;
	fi

	return 0;
}

#
# initialization
#

# figure out the right things to pass to echo to supress a newline
if [ "`echo -n`" = "-n" ]; then
	n=""; c="\c";
else
	n="-n"; c="";
fi

check_pkgconfig;

#
# actual script part starts here
#

mkdir -p .conftests

# TODO: command-line parameters (prefix, etc)

echo "";
att bold;
echo_n "configuring "; style_package -n "rove"; att; att bold; echo " ${ROVE_VERSION}:";
att;
echo_n "  checking for gcc:             ";
if check_gcc; then
	style_success "found gcc $CC_VERSION";
else
	style_error "no gcc :(";

	echo   "";
	echo   "I couldn't find gcc on your system!  you will need it to compile rove.";
	echo_n "if you're on "; style_distro -n "ubuntu"; echo_n ", make sure to grab the "; style_package "build-essential"; echo " package.";
	echo   "on mac os X, you'll need to install the Xcode developer tools.";
	echo   "";

	cleanup;
	exit -1;
fi

echo_n "  checking for JACK:            ";
if check_jack; then
	style_success "found JACK $JACK_VERSION";
else
	style_error "no jack :(";
	
	echo   "";
	echo   "I couldn't find JACK on your system!  you will need it to compile rove.";
	echo_n "if you're on "; style_distro -n "ubuntu"; echo_n ", make sure you have the "; style_package -n "libjack-dev"; echo_n " and "; style_package -n "jackd"; echo " packages.";
	echo_n "on "; style_distro -n "other distros"; echo_n ", the package might be called "; style_package -n "jack-audio-connection-kit"; echo ".";
	echo_n "failing that, grab the source from "; style_link -n "http://jackaudio.org"; echo ".";
	echo   "";
	style_distro -n "mac os X"; echo_n " users should head to "; style_link -n "http://jackosx.com/"; echo ".";
	echo   "";
	
	cleanup;
	exit -1;
fi

echo_n "  checking for liblo:           ";
if check_lo; then
	style_success "found liblo $LO_VERSION";
else
	style_error "no liblo :(";

	echo   "";
	echo   "I couldn't find liblo on your system!  you will need it to compile rove."
	echo_n "if you're on "; style_distro -n "ubuntu"; echo_n ", make sure you have the "; style_package -n "liblo0-dev "; echo " package installed.";
	echo_n "users of "; style_distro -n "other distros"; echo_n " and "; style_distro -n "mac os X"; echo_n " should look for a "; style_package -n "liblo"; echo " package, or";
	echo_n "get the source from the liblo homepage at "; style_link -n "http://liblo.sourceforge.net/"; echo ".";
	echo   "";
	
	cleanup;
	exit -1;
fi

echo_n "  checking for libsndfile:      ";
if check_sndfile; then
	style_success "found libsndfile $SNDFILE_VERSION";
else
	style_error "no libsndfile :(";
	
	echo   "";
	echo   "I couldn't find libsndfile on your system!  you will need it to compile rove."
	echo_n "if you're on "; style_distro -n "ubuntu"; echo_n ", make sure you have the "; style_package -n "libsndfile1-dev"; echo " package installed.";
	echo_n "users of "; style_distro -n "other distros"; echo_n " and "; style_distro -n "mac os X"; echo_n " should look for a "; style_package -n "libsndfile"; echo " package, or";
	echo_n "get the source from the liblo homepage at "; style_link -n "http://mega-nerd.com/libsndfile/"; echo ".";
	echo "";
	exit -1;
fi

# TODO: write config.mk
echo "";
echo_n "you're all set!  run "; style_package -n "make"; echo_n " to compile rove and then "; style_package -n "make install"; echo " as root to install it system wide.";
echo "";

cleanup;
exit 0;